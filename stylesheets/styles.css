@layer remedy {
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}
	* {
		font-family: inherit;
		font-size: inherit;
		line-height: inherit;
		margin: 0;
		outline-offset: max(0.0625rem, 1px);
		padding: 0;
		text-decoration-thickness: from-font;
	}
	:root {
		color-scheme: light dark;
		font-family: system-ui, -apple-system, BlinkMacSystemFont, Inter, sans-serif;
		font-kerning: normal;
		font-optical-sizing: auto;
		-webkit-font-smoothing: antialiased;
		font-synthesis: none;
		font-variant-ligatures: common-ligatures no-discretionary-ligatures
			no-historical-ligatures contextual;
		hanging-punctuation: first allow-end last;
		hyphenate-character: "‐"; /* Unambiguous hyphen U+2010 */
		hyphenate-limit-chars: auto 2 3;
		interpolate-size: allow-keywords;
		letter-spacing: 0;
		line-height: 1.2;
		margin: 0;
		orphans: 2;
		overflow-wrap: break-word;
		padding: 0;
		print-color-adjust: exact;
		tab-size: 2;
		text-align: start;
		text-decoration-skip-ink: auto;
		text-rendering: optimizeLegibility;
		-moz-text-size-adjust: none;
		-webkit-text-size-adjust: none;
		text-size-adjust: none;
		text-underline-position: from-font;
		text-wrap: balance;
		@media (prefers-reduced-motion: no-preference) {
			scroll-behavior: smooth;
		}
	}
	[hidden] {
		display: none;
	}
	body {
		inline-size: 100%;
		min-block-size: 100dvb;
	}
	ul:not([role="list"]) {
		list-style-type: disc;
	}
	:is(ol, ul):not([role="list"]) {
		padding-inline-start: 1em;
	}
	:is(ol, ul)[role="list"] {
		list-style-type: none;
	}
	b,
	strong {
		font-weight: bolder;
	}
	em,
	i,
	var {
		font-style: italic;
	}
	:is(em, i) > :is(em, i) {
		font-style: normal;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		line-height: 1.05;
	}
	code,
	kbd,
	pre,
	samp {
		font-family: ui-monospace, monospace;
		hyphens: none;
		letter-spacing: -0.02em;
		text-align: start;
		word-spacing: normal;
		word-wrap: normal;
	}
	pre:has(code) {
		max-inline-size: 100%;
		overflow-x: auto;
		overflow-inline: auto;
		inline-size: max-content;
	}
	abbr {
		text-decoration: none;
	}
	hr {
		border-inline: 0;
		box-sizing: content-box;
		height: 0;
	}
	canvas,
	embed,
	figure,
	iframe,
	img,
	object,
	picture,
	svg,
	video {
		display: block;
		max-height: 100%;
		max-width: 100%;
		vertical-align: middle; /* If `display` value is overridden */
	}
	iframe {
		border: 0;
	}
	img {
		background-repeat: no-repeat; /* If providing low-res preview via `style` attribute */
		background-size: cover;
		height: auto;
		shape-margin: 1rem; /* If floated */
	}
	img[alt] {
		font-style: italic;
	}
	canvas,
	img,
	picture,
	svg,
	video {
		border-style: none;
		height: auto;
	}
	picture {
		display: contents;
	}
	source {
		display: none;
	}
	fieldset {
		border: 0;
		min-inline-size: 0;
	}
	input,
	textarea {
		hanging-punctuation: none;
	}
	input,
	button,
	textarea,
	select {
		touch-action: manipulation;
	}
	small {
		font-size: 0.85em;
	}
	math,
	td,
	time[datetime*=":"],
	var {
		font-variant-numeric: lining-nums slashed-zero tabular-nums;
	}
	sub {
		font-size: 100%;
		font-variant-position: sub;
		vertical-align: baseline;
	}
	sup {
		font-size: 100%;
		font-variant-position: super;
		vertical-align: baseline;
	}
}

@layer base {
	@font-face {
		/* https://ateliertriay.github.io/bricolage */
		font-family: "Bricolage Grotesque";
		font-style: normal;
		font-stretch: 75% 100%;
		font-width: 75% 100%;
		font-weight: 200 800;
		src: url("/fonts/bricolage.woff2") format("woff2");
	}

	* {
		font-feature-settings: "case" var(--ot-case, off),
			"sinf" var(--ot-sinf, off);
		font-variation-settings: "wdth" var(--ot-wdth);
	}

	:root {
		--discord-blurple: oklch(57.74% 0.209 273.85);
		--discord-green: oklch(85.48% 0.197 150.16);
		--discord-yellow: oklch(92.18% 0.157 99.87);
		--discord-fuchsia: oklch(65.34% 0.217 351.92);
		--discord-red: oklch(63.18% 0.207 24.57);
		--discord-white: white;
		--discord-black: black;
		--discord-legacy-blurple: oklch(64.74% 0.124 270.62);
		--discord-legacy-full-white: white;
		--discord-legacy-greyple: oklch(72.83% 0.025 236.13);
		--discord-legacy-dark-but-not-black: oklch(30.38% 0.008 255.56);
		--discord-legacy-not-quite-black: oklch(26.99% 0.008 240.16);
		--discord-legacy-actually-black: black;

		--ease-out-cubic: cubic-bezier(0.33, 1, 0.68, 1);
		--font-body: system-ui, -apple-system, BlinkMacSystemFont, Inter, "Segoe UI",
			Roboto, Ubuntu, sans-serif;
		--font-display: "Bricolage Grotesque", system-ui, -apple-system,
			BlinkMacSystemFont, Inter, "Segoe UI", Roboto, Ubuntu, sans-serif;
		--font-mono: ui-monospace, monospace;

		--ratio: 1.33333333;
		--s-6: calc(1rem * pow(var(--ratio), -6));
		--s-5: calc(1rem * pow(var(--ratio), -5));
		--s-4: calc(1rem * pow(var(--ratio), -4));
		--s-3: calc(1rem * pow(var(--ratio), -3));
		--s-2: calc(1rem * pow(var(--ratio), -2));
		--s-1: calc(1rem * pow(var(--ratio), -1));
		--s0: 1rem;
		--s1: calc(1rem * pow(var(--ratio), 1));
		--s2: calc(1rem * pow(var(--ratio), 2));
		--s3: calc(1rem * pow(var(--ratio), 3));
		--s4: calc(1rem * pow(var(--ratio), 4));
		--s5: calc(1rem * pow(var(--ratio), 5));
		--s6: calc(1rem * pow(var(--ratio), 6));
		--s7: calc(1rem * pow(var(--ratio), 7));
		--s8: calc(1rem * pow(var(--ratio), 8));
		--s9: calc(1rem * pow(var(--ratio), 9));
		--s10: calc(1rem * pow(var(--ratio), 10));
		--s11: calc(1rem * pow(var(--ratio), 11));

		background-color: var(--discord-legacy-dark-but-not-black);
		cursor: url(/assets/cursor.svg) 12 12, auto;
		color-scheme: only dark;
		color: var(--discord-white);
		font-family: var(--font-body);
		letter-spacing: 0.02em;
		/* Terrible a11y! Never do this on a website */
		font-size: max(5.5vmin, 150%);
		font-weight: 450;
	}

	::selection {
		background-color: transparent;
	}

	a {
		color: inherit;
		border-radius: 0.1875em;
		display: inline-block; /* Enable transform */
		text-decoration-color: transparent;
		text-decoration-line: none;
		transform: scale(1);
		transition: 250ms ease;
		transition-property: text-shadow, transform;
		&::after {
			content: "↗";
			display: inline-block;
			font-size: 0.4em;
			color: oklch(from currentcolor l c h / 15%);
			text-shadow: none;
			vertical-align: super;
			translate: 0 -0.5em;
			transition: 250ms ease;
			transition-property: color transform;
		}
		&:hover {
			text-shadow: 0 0 0.5em var(--discord-blurple);
			transform: scale(102%);
		}
		&:hover::after {
			color: oklch(from var(--discord-blurple) l c h / 55%);
			transform: translate(0.15em, -0.15em);
		}
	}

	code,
	kbd,
	pre,
	samp {
		font-family: var(--font-mono);
	}

	figure {
		display: grid;
		grid-template-areas: "--figure" "--caption";
		grid-template-rows: 1fr auto;
		justify-items: center;
		place-items: center;
		row-gap: var(--s-2);
		figcaption {
			grid-area: --caption;
			font-size: var(--s-1);
			font-weight: 500;
			opacity: 55%;
		}
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: var(--font-display);
	}

	h1 {
		font-size: var(--s3);
	}
	h2 {
		font-size: var(--s2);
	}
	h3 {
		font-size: var(--s1);
	}

	s {
		opacity: 55%;
	}
}

@layer slides {
	main {
		opacity: 0;
		transition: opacity 200ms ease;
		&.👀 {
			opacity: 1;
		}
	}

	main > div {
		block-size: 100vb;
		display: flex;
		flex-direction: column;
		inline-size: 100%;
		inset-block-start: 0;
		inset-inline-start: 0;
		overflow: hidden;
		place-content: center;
		place-items: center;
		padding-bottom: calc(max(env(safe-area-inset-bottom), var(--s1)));
		padding-left: max(env(safe-area-inset-left), var(--s2));
		padding-right: max(env(safe-area-inset-right), var(--s2));
		padding-top: max(env(safe-area-inset-top), var(--s0));
		position: absolute;
		text-align: center;

		&:not(.👀) {
			overflow: hidden;
			pointer-events: none;
			white-space: nowrap;
			opacity: 0;
		}

		&.👀 {
			visibility: visible;
			pointer-events: auto;
		}

		iframe {
			border-radius: var(--s0);
			block-size: 100%;
			inline-size: 100%;
			box-shadow: oklch(100% 0 0 / 8%) 0 0 0 0.0625rem,
				oklch(100% 0 0 / 4%) 0 0.125rem 0.125rem 0;
		}

		&:has(a:hover) a:not(:hover) {
			text-shadow: 0 0 0.5em oklch(from var(--discord-white) l c h / 55%);
		}
	}

	:is(blockquote, code, h1, h2, h2, h3, h4, h5, h6, label, li, ol, p, q, ul) {
		& + & {
			margin-block-start: var(--flow-space, 1em);
		}
	}

	/*
	 * A little rectangle in the bottom right corner used to regain focus from
   * iframes, and also as a resting place for mouse pointer.
	 */
	.cursor-resting-area {
		background: transparent;
		block-size: 10vmin;
		cursor: none;
		inline-size: 10vmin;
		inset-block-end: 0;
		inset-inline-end: 0;
		position: absolute;
		z-index: calc(infinity);
	}

	.indicator {
		aspect-ratio: 3 / 2;
		background-color: var(--discord-yellow);
		block-size: 12px;
		border: 1px solid oklch(100% 0 0 / 50%);
		border-radius: calc(infinity * 1px);
		inset-block-start: calc(env(safe-area-inset-left, 0) + var(--s1));
		inset-inline-start: calc(env(safe-area-inset-top, 0) + var(--s1));
		position: absolute;
		z-index: calc(infinity);
		opacity: 0;

		&.👀 {
			opacity: 30%;
		}
		&:not(.👀) {
			transition: opacity 500ms var(--ease-out-cubic);
		}
	}
}

@layer slide-templates {
	main > div:not(.custom-template) {
		/* Single figure */
		&:has(
				> :not(style):first-of-type:last-of-type:is(
						canvas,
						embed,
						figure,
						iframe,
						img,
						object,
						picture,
						video
					)
			) {
			:is(canvas, embed, iframe, img, object, video) {
				object-fit: contain;
				object-position: center;
			}
		}

		/* Two figures */
		&:has(
				> :not(style):nth-of-type(2):last-of-type:is(
						canvas,
						embed,
						figure,
						iframe,
						img,
						object,
						picture,
						video
					)
			) {
			display: grid;
			gap: var(--s0);
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}

		/* Heading and figure */
		&:has(> :not(style):first-of-type:is(h1, h2, h3, h4, h5, h6)):has(
				> :not(style):last-of-type:is(
						canvas,
						embed,
						iframe,
						img,
						object,
						picture,
						video
					)
			) {
			display: grid;
			gap: var(--s-6);
			grid-template-rows: minmax(0, auto) minmax(0, 1fr);
		}

		/* Major heading and bullets */
		&:has(> :not(style):first-of-type:is(h2, h3)):has(
				> :not(style):last-of-type:is(ol, ul)
			) {
			align-items: stretch;
			display: grid;
			gap: var(--s0);
			grid-template-columns: minmax(0, 3fr) minmax(0, 4fr);
			justify-items: stretch;
			text-align: start;

			> :is(h2, h3) {
				font-size: unset;
				line-height: unset;
			}

			> :is(ul, ol) {
				margin-block-start: 0;
			}
		}

		/* Minor heading and bullets */
		&:has(> :not(style):first-of-type:is(h4, h5, h6)):has(
				> :not(style):last-of-type:is(ol, ul)
			) {
			align-items: stretch;
			text-align: start;
		}
	}
}
